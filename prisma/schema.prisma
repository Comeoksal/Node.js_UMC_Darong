// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique(map: "email") @db.VarChar(255)
  name          String   @db.VarChar(100)
  gender        String   @db.VarChar(15)
  birth         DateTime @db.Date
  address       String   @db.VarChar(255)
  detailAddress String?  @map("detail_address") @db.VarChar(255)
  phoneNumber   String   @map("phone_number") @db.VarChar(15)
  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt @default(now())

  userFavorCategories UserFavorCategory[]
  reviews Review[]


  @@map("user")
}

model FoodCategory{
  id Int @id @default(autoincrement())
  name String @db.VarChar(30)
  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt @default(now())

  userFavorCategories UserFavorCategory[]

  @@map("food_category")
}

model UserFavorCategory{
  id  BigInt  @id @default(autoincrement())
  user User @relation(fields:[userId], references:[id])
  userId Int @map("user_id")
  foodCategory FoodCategory @relation(fields:[foodCategoryId], references:[id])
  foodCategoryId Int @map("food_category_id")
  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt @default(now())

  @@index([foodCategoryId], map: "food_category_id")
  @@index([userId], map: "user_id")
  @@map("user_favor_category")
}

model Store{
  id BigInt @id @default(autoincrement())
  region Region @relation(fields:[regionId], references:[id])
  regionId BigInt @map("region_id")
  name String @db.VarChar(50)
  address String @db.VarChar(50)
  score Float @db.Float @default(0.0)
  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt @default(now())

  reviews Review[]

  @@map("store")
}

model Region{
  id BigInt @id @default(autoincrement())
  name String @db.VarChar(20)
  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt @default(now())

  stores Store[]

  @@map("region")
}

model Review{
  id BigInt @id @default(autoincrement())
  user User @relation(fields:[userId], references:[id])
  userId Int @map("user_id")
  store Store @relation(fields:[storeId], references:[id])
  storeId BigInt @map("store_id")
  body String @db.Text
  score Float @db.Float
  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt @default(now())

  @@map("review")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.VarChar(512)
  expiresAt DateTime @map("expires_at")

  @@map("session")
}